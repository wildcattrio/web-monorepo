name: Deploy to Firebase Hosting

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install Firebase Tools
        run: npm i -g firebase-tools@13.10.2
      - name: Write service account key
        if: ${{ secrets.FIREBASE_SERVICE_ACCOUNT != '' }}
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "${FIREBASE_SERVICE_ACCOUNT}" > $RUNNER_TEMP/firebase-sa.json
          echo "Wrote service account key to $RUNNER_TEMP/firebase-sa.json"
      - name: Show environment
        run: |
          node -v
          npm -v
          firebase --version
      - name: Validate FIREBASE_TOKEN available
        if: ${{ secrets.FIREBASE_SERVICE_ACCOUNT == '' }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          if [ -z "$FIREBASE_TOKEN" ]; then echo "FIREBASE_TOKEN is missing" && exit 1; fi
          echo "FIREBASE_TOKEN is present (masked)."
      - name: List Firebase projects (sanity check)
        continue-on-error: true
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          if [ -f "$RUNNER_TEMP/firebase-sa.json" ]; then
            export GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/firebase-sa.json
            firebase projects:list
          else
            firebase projects:list --token "$FIREBASE_TOKEN"
          fi
      - name: Prepare Hosting targets (no-op if exist)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          if [ -f "$RUNNER_TEMP/firebase-sa.json" ]; then
            export GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/firebase-sa.json
            firebase target:apply hosting wildcattrio-web-prod wildcattrio-web-prod --project wildcattrio-web-prod || true
            firebase target:apply hosting elevatequotes-web-prod elevatequotes-web-prod --project elevatequotes-web-prod || true
            firebase target:apply hosting calsmartai-web-prod calsmartai-web-prod --project calsmartai-web-prod || true
          else
            firebase target:apply hosting wildcattrio-web-prod wildcattrio-web-prod --project wildcattrio-web-prod --token "$FIREBASE_TOKEN" || true
            firebase target:apply hosting elevatequotes-web-prod elevatequotes-web-prod --project elevatequotes-web-prod --token "$FIREBASE_TOKEN" || true
            firebase target:apply hosting calsmartai-web-prod calsmartai-web-prod --project calsmartai-web-prod --token "$FIREBASE_TOKEN" || true
          fi
      - name: Deploy Corporate (wildcattrio-web-prod)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          if [ -f "$RUNNER_TEMP/firebase-sa.json" ]; then
            export GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/firebase-sa.json
            firebase deploy --only hosting:wildcattrio-web-prod --project wildcattrio-web-prod --non-interactive --debug
          else
            firebase deploy --only hosting:wildcattrio-web-prod --project wildcattrio-web-prod --token "$FIREBASE_TOKEN" --non-interactive --debug
          fi
      - name: Deploy Elevate Quotes (elevatequotes-web-prod)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          if [ -f "$RUNNER_TEMP/firebase-sa.json" ]; then
            export GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/firebase-sa.json
            firebase deploy --only hosting:elevatequotes-web-prod --project elevatequotes-web-prod --non-interactive --debug
          else
            firebase deploy --only hosting:elevatequotes-web-prod --project elevatequotes-web-prod --token "$FIREBASE_TOKEN" --non-interactive --debug
          fi
      - name: Deploy CalSmart AI (calsmartai-web-prod)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          if [ -f "$RUNNER_TEMP/firebase-sa.json" ]; then
            export GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/firebase-sa.json
            firebase deploy --only hosting:calsmartai-web-prod --project calsmartai-web-prod --non-interactive --debug
          else
            firebase deploy --only hosting:calsmartai-web-prod --project calsmartai-web-prod --token "$FIREBASE_TOKEN" --non-interactive --debug
          fi


